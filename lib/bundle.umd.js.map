{"version":3,"file":"bundle.umd.js","sources":["../src/index.ts"],"sourcesContent":["interface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * Calculate the distance between two points.\n * @param v1 - The first point {x, y}.\n * @param v2 - The second point {x, y}.\n * @returns The distance between the points.\n */\nexport const distance = (v1: Point, v2: Point): number => {\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\nexport const coin = (prob: number = 0.5): boolean => Math.random() < prob;\n\nexport const coinN = (prob: number = 0.5): number =>\n  Math.random() < prob ? 1 : -1;\n\nexport const rad = (deg: number): number => (deg * Math.PI) / 180;\n\nexport const random = (max: number, min: number = 0): number =>\n  Math.random() * (max - min) + min;\n\nexport const rrandom = (max: number, min: number = 0): number =>\n  Math.round(random(max, min));\n\nexport const genNum = (nums: number): string => {\n  if (nums === 0) return '';\n  const maxNum = parseInt('9'.repeat(nums));\n  return String(Math.round(Math.random() * maxNum)).padStart(nums, '0');\n};\n\nexport const randomArray = (elements: number | any[]): any[] => {\n  if (typeof elements === 'number') {\n    elements = [...Array(elements).keys()];\n  }\n  return elements.sort(() => Math.random() - 0.5);\n};\n\nexport const clamp = (val: number, min: number, max: number): number => {\n  if (min > max) {\n    [min, max] = [max, min]; // Swap min and max\n  }\n  return Math.max(min, Math.min(max, val));\n};\n\nexport const near = (val: number, target: number, threshold: number): boolean =>\n  Math.abs(val - target) <= threshold;\n\nexport const map = (\n  value: number,\n  inMin: number,\n  inMax: number,\n  outMin: number,\n  outMax: number,\n): number => {\n  const ratio = (clamp(value, inMin, inMax) - inMin) / (inMax - inMin);\n  return outMin + ratio * (outMax - outMin);\n};\n\nexport const lerp = (ratio: number, start: number, end: number): number =>\n  start + (end - start) * ratio;\n\nexport const norm = (val: number, start: number, end: number): number =>\n  (val - start) / (end - start);\n\nexport const steps = (\n  val: number,\n  stepSize: number,\n  overflow: number,\n): number => Math.floor(val / stepSize) % overflow;\n\nexport const between = (n1: number, n2: number, n3: number): boolean => {\n  const min = Math.min(n2, n3);\n  const max = Math.max(n2, n3);\n  return n1 >= min && n1 <= max;\n};\n"],"names":[],"mappings":"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"}